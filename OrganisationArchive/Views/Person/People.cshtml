@using  OrganisationArchive.DAL.Models
@model OrganisationArchive.Models.PaginatedList<Person>



@{
    ViewData["Title"] = "People";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<style>
    body {
        background-color: azure;
    }
</style>

<h1>People</h1>
<form asp-action="People" method="get">
    <div class="form-actions no-color">
        <p>
            Find: <input type="text" name="SearchString" value="@ViewBag.currentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a class="btn btn-primary" asp-action="People">Back to Full List</a>
        </p>
    </div>
</form>
@Html.ActionLink("Add person", "AddPerson", "Person", null, new { @class = "btn btn-primary btn-large" })
<div class="card-rows">
    <div class="card-columns">
        @foreach (var item in Model)
        {
            <div class="card">
                <div class="card-img">
                    <img src="~/images/@item.Image" alt="Alternate Text" />
                </div>
                <div class="card-body">
                    <h5>@item.Name @item.Lastname</h5>

                    <a class="btn" asp-controller="Person" asp-action="Edit" asp-route-Id="@item.Id">Edit</a>
                    <a class="btn" asp-controller="Person" asp-action="Details" asp-route-Id="@item.Id">Details</a>
                    <a class="btn" asp-controller="Person" asp-action="Delete" asp-route-Id="@item.Id">Delete</a>
                </div>
            </div>
        }
    </div>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="People"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="People"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
